namespace: petclinic-app

image:
  registry: "abbdemoazdevacr.azurecr.io"   # e.g., myregistry.azurecr.io (ACR only)
  namespace: petclinic-app
  tag: "latest"
  pullPolicy: Always

replicaCount: 1

resources: {}

java:
  extraEnv: []          # you can add JVM flags here if you like

configServer:
  enabled: true
  image: config-server
  port: 8888
  git:
    uri: "https://github.com/sonalika-roy/spring-petclinic-microservices-config"
    username: ""
    passwordSecretName: ""   # e.g., config-git
    passwordSecretKey: git_pat
    defaultLabel: main
  native:
    enabled: false
    searchLocations: "/config"
  resources: {}

services:
  api-gateway:
    enabled: true
    image: api-gateway
    port: 8080
    env: []
    resources: {}
  customers-service:
    enabled: true
    image: customers-service
    port: 8081
    env: []
    resources: {}
  visits-service:
    enabled: true
    image: visits-service
    port: 8082
    env: []
    resources: {}
  vets-service:
    enabled: true
    image: vets-service
    port: 8083
    env: []
    resources: {}
  chat-agent:
    enabled: false
    image: chat-agent
    port: 8080
    env: []
    resources: {}

# NOTE: SPRING_PROFILES_ACTIVE is computed in templates:
# - default "docker" for all services
# - adds ",mysql" automatically for customers/visits/vets when mysql.enabled=true
commonEnv:
  - name: CONFIG_SERVER_URL
    value: http://config-server:8888/

mysql:
  enabled: false
  server: ""              # e.g., abcd.mysql.database.azure.com
  username: ""            # e.g., petclinic@abcd
  passwordSecretName: ""  # e.g., mysql-credentials
  passwordSecretKey: sql_password

serviceAccount:
  create: true
  name: ""

imagePullSecrets: []

ingress:
  enabled: true
  className: nginx
  #annotations: {}
  hosts:
    - host: petclinic.example.com
      paths:
        - path: /
          pathType: Prefix
          service: api-gateway
          port: 8080
  #tls: []