name: Trivy Scan

on:
  push:
    branches: [ main, master ]
    paths:
      - ".github/workflows/trivy-scan.yaml"
    tags: [ "v*" ]
  workflow_dispatch:

permissions:
  contents: read
  id-token: write

env:
  JAVA_VERSION: '17'
  MVN_ARGS: '-B -ntp -DskipTests'
  DOCKERFILE: src/docker/Dockerfile
  DOCKERIZE_VERSION: v0.6.1
  ACR_LOGIN_SERVER: abbdemoazdevacr.azurecr.io
  IMAGE_NAMESPACE: demo-petclinic-app
  PLATFORMS: linux/amd64,linux/arm64
  ACR_NAME: abbdemoazdevacr

# ──────────────────────────────────────────────────────────────────────────────
# Static security checks (secrets, CodeQL, Dockerfile lint)
# ──────────────────────────────────────────────────────────────────────────────
jobs:         
  imgscan:
    name: Scan Images
    runs-on: self-hosted
    permissions:
      id-token: write
      contents: read
      packages: write
    strategy:
      fail-fast: false
      matrix:
        include:
          - name: config-server
            module: spring-petclinic-config-server
            port: 8888
          - name: api-gateway
            module: spring-petclinic-api-gateway
            port: 8080
          - name: customers-service
            module: spring-petclinic-customers-service
            port: 8080
          - name: vets-service
            module: spring-petclinic-vets-service
            port: 8080
          - name: visits-service
            module: spring-petclinic-visits-service
            port: 8080
          - name: chat-agent
            module: spring-petclinic-chat-agent
            port: 8080

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set image registry/repo
        id: img
        run: |
          echo "ns=${{ env.IMAGE_NAMESPACE }}" >> $GITHUB_OUTPUT
          echo "pre=local/${{ env.IMAGE_NAMESPACE }}/${{ matrix.name }}:pre-${{ github.sha }}" >> $GITHUB_OUTPUT

      - name: Set up Temurin ${{ env.JAVA_VERSION }}
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: ${{ env.JAVA_VERSION }}
          cache: maven

      - name: Set up QEMU for multi-arch
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build jar for ${{ matrix.name }}
        shell: bash
        run: |
          set -e
          mvn -f src/${{ matrix.module }}/pom.xml $MVN_ARGS package

      - name: Prepare image context (copy jar to app.jar)
        shell: bash
        run: |
          set -e
          TARGET="src/${{ matrix.module }}/target"
          ls -l "$TARGET"
          JAR=$(ls "$TARGET"/*.jar | head -n1)
          cp -f "$JAR" "$TARGET/app.jar"

      - name: Build single-arch image (local, linux/amd64)
        id: build_tar
        uses: docker/build-push-action@v6
        with:
          context: src/${{ matrix.module }}/target
          file: ${{ env.DOCKERFILE }}
          platforms: linux/amd64                 
          tags: ${{ steps.img.outputs.pre }}
          outputs: type=docker,dest=${{ runner.temp }}/${{ matrix.name }}-${{ github.sha }}.tar
          build-args: |
            ARTIFACT_NAME=app
            EXPOSED_PORT=${{ matrix.port }}
            DOCKERIZE_VERSION=${{ env.DOCKERIZE_VERSION }}
      
      - name: Trivy scan
        run: |
          trivy image \
            ---scanners vuln \
            --pkg-types os,library \
            --severity HIGH,CRITICAL \
            --exit-code 1 \
            --input "${{ runner.temp }}/${{ matrix.name }}-${{ github.sha }}.tar"