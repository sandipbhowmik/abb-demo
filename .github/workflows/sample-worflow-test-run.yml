name: Sample Build Workflow

on:
  push:
    branches: [ "main" ]
    paths:
      - "Dockerfile"
      - "**/*.py"
      - "**/*.js"
      - "**/*.ts"
      - "**/*.go"
      - ".github/workflows/ci-pipeline.yml"
  workflow_dispatch:

permissions:
  contents: read
  id-token: write   # required for OIDC â†’ Azure

env:
  ACR_NAME: abbdemoazdevacr
  ACR_LOGIN_SERVER: abbdemoazdevacr.azurecr.io
  IMAGE_NAME: demo-myapp

jobs:
  build-and-push:
    runs-on: self-hosted

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Azure login (OIDC)
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to ACR
        run: az acr login --name "$ACR_NAME"

      - name: Compute image tag
        id: meta
        shell: bash
        run: |
          SHA_SHORT="${GITHUB_SHA::7}"
          if [[ "${GITHUB_REF}" == refs/tags/* ]]; then
            VERSION="${GITHUB_REF#refs/tags/}"
          else
            BRANCH="${GITHUB_REF#refs/heads/}"
            SAFE_BRANCH="${BRANCH//\//-}"
            VERSION="${SAFE_BRANCH}-${SHA_SHORT}"
          fi
          echo "version=$VERSION" >> "$GITHUB_OUTPUT"
          echo "Tag: $VERSION"

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: |
            ${{ env.ACR_LOGIN_SERVER }}/${{ env.IMAGE_NAME }}:${{ steps.meta.outputs.version }}
            ${{ env.ACR_LOGIN_SERVER }}/${{ env.IMAGE_NAME }}:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max
          platforms: linux/amd64,linux/arm64

      - name: Azure logout
        if: always()
        run: az logout

